{
  "info": {
    "description": "Retrieves password for PAN validation tests - executes once before test suite",
    "name": "Get Password Setup",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Parse password from SOAP response and store in environment",
              "if (pm.response.code === 200) {",
              "    const responseXml = pm.response.text();",
              "    const xml2js = require('xml2js');",
              "    const parseString = xml2js.parseString;",
              "    ",
              "    parseString(responseXml, { explicitArray: false }, (err, result) =\u003e {",
              "        if (err) {",
              "            console.error('Error parsing XML:', err);",
              "            return;",
              "        }",
              "        ",
              "        try {",
              "            // Handle different SOAP envelope formats",
              "            let password;",
              "            if (result['soap:Envelope']) {",
              "                password = result['soap:Envelope']['soap:Body']['GetPasswordResponse']['GetPasswordResult'];",
              "            } else if (result['soap12:Envelope']) {",
              "                password = result['soap12:Envelope']['soap12:Body']['GetPasswordResponse']['GetPasswordResult'];",
              "            }",
              "            ",
              "            if (password) {",
              "                pm.environment.set('password', password);",
              "                console.log('[PASSWORD] Password retrieved and stored');",
              "                ",
              "                pm.test('Password service available', function () {",
              "                    pm.expect(password).to.be.a('string');",
              "                    pm.expect(password.length).to.be.greaterThan(0);",
              "                });",
              "            }",
              "        } catch (error) {",
              "            console.error('Error extracting password:', error);",
              "        }",
              "    });",
              "} else {",
              "    console.log('Password service returned error:', pm.response.code);",
              "    console.log('Response:', pm.response.text());",
              "    ",
              "    // Check if password already exists in environment",
              "    const existingPassword = pm.environment.get('password');",
              "    if (existingPassword) {",
              "        console.log('Using existing password from environment');",
              "        pm.test('Using existing password', function () {",
              "            pm.expect(existingPassword).to.be.a('string');",
              "        });",
              "    } else {",
              "        pm.test('Password retrieval failed', function () {",
              "            pm.expect.fail('Unable to retrieve password and no existing password found');",
              "        });",
              "    }",
              "}"
            ]
          }
        }
      ],
      "name": "Get Password",
      "request": {
        "body": {
          "mode": "raw",
          "raw": "\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003csoap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"\u003e\n    \u003csoap12:Body\u003e\n        \u003cGetPassword xmlns=\"https://test.cvlkra.com/\"\u003e\n            \u003cpassword\u003eTest@123\u003c/password\u003e\n            \u003cPassKey\u003e123\u003c/PassKey\u003e\n        \u003c/GetPassword\u003e\n    \u003c/soap12:Body\u003e\n\u003c/soap12:Envelope\u003e"
        },
        "header": [
          {
            "key": "SOAPAction",
            "value": "{{protocol}}://{{base_url}}/get_password"
          },
          {
            "key": "Content-Type",
            "value": "application/xml"
          }
        ],
        "method": "POST",
        "url": {
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "get_password"
          ],
          "protocol": "{{protocol}}",
          "raw": "{{protocol}}://{{base_url}}/get_password"
        }
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "type": "default",
      "value": "localhost:8083"
    },
    {
      "key": "protocol",
      "type": "default",
      "value": "http"
    }
  ]
}
